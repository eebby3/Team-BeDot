{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidokao/Documents/classes/Fall 2020/JD/Team-BeDot/ChildSafetyApp/navigation/login.tsx\";\nimport * as React from 'react';\nvar AuthContext = React.createContext();\nexport default function SignInScreen() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      setUsername = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Username\",\n    value: username,\n    onChangeText: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Sign in\",\n    onPress: function onPress() {\n      return signIn({\n        username: username,\n        password: password\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/davidokao/Documents/classes/Fall 2020/JD/Team-BeDot/ChildSafetyApp/navigation/login.tsx"],"names":["React","AuthContext","createContext","SignInScreen","useState","username","setUsername","password","setPassword","useContext","signIn"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAgBA,IAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,EAApB;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA,wBACLH,KAAK,CAACI,QAAN,CAAe,EAAf,CADK;AAAA;AAAA,MAC9BC,QAD8B;AAAA,MACpBC,WADoB;;AAAA,yBAELN,KAAK,CAACI,QAAN,CAAe,EAAf,CAFK;AAAA;AAAA,MAE9BG,QAF8B;AAAA,MAEpBC,WAFoB;;AAAA,0BAIlBR,KAAK,CAACS,UAAN,CAAiBR,WAAjB,CAJkB;AAAA,MAI7BS,MAJ6B,qBAI7BA,MAJ6B;;AAMrC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAEL,QAFT;AAGE,IAAA,YAAY,EAAEC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAEC,QAFT;AAGE,IAAA,YAAY,EAAEC,WAHhB;AAIE,IAAA,eAAe,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAME,MAAM,CAAC;AAAEL,QAAAA,QAAQ,EAARA,QAAF;AAAYE,QAAAA,QAAQ,EAARA;AAAZ,OAAD,CAAZ;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD","sourcesContent":["import * as React from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons'; \nimport { Foundation } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabThreeScreen from '../screens/TabThreeScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList, TabThreeParamList } from '../types';\n\nconst AuthContext = React.createContext();\n\n\nexport default function SignInScreen() {\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const { signIn } = React.useContext(AuthContext);\n\n  return (\n    <View>\n      <TextInput\n        placeholder=\"Username\"\n        value={username}\n        onChangeText={setUsername}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <Button title=\"Sign in\" onPress={() => signIn({ username, password })} />\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}